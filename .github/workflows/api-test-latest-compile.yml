# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2022, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

name: api-test-latest-compile
on:
  workflow_dispatch:
  schedule:
  # #   # - cron: '0 4 * * MON'
    - cron: '0 4 * * *'
env:
  # DEBUG_FLAG: ${{ true }}
  DEBUG_FLAG: ${{ false }}
  EP_OPENAPI_DIR: "ep-openapi"
  EP_OPENAPI_TEST_LOGS_DIR: "ep-openapi/test/logs"
  EP_OPENAPI_TEST_LOGS_OUTPUT_NAME: "ep-openapi-test-logs"
jobs:
  api_test_latest_compile:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 1
      matrix:
        node: [ '16' ]
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          # echo ">>> environment: TEST_* "
          # env | grep TEST

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: env after install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version

      - name: "pull latest api spec"
        run: |
          cd "${EP_OPENAPI_DIR}"
          cd resources
          rm ep-openapi-spec.json
          curl https://openapi-v2.solace.cloud/api-docs-v2.json --output ./ep-openapi-spec.json
          ls -la
          # echo "Version:"
          # cat ep-openapi-spec.json | grep -E -o ".{0,100}\"version\": \".{0,100}"

      - name: "npm install"
        run: |
          cd "${EP_OPENAPI_DIR}"
          npm install

      - name: "npm run build"
        run: |
          cd "${EP_OPENAPI_DIR}"
          npm run build

      - name: "compile"
        run: |
          cd "${EP_OPENAPI_DIR}"
          npm run compile:spec

###
# The End.
